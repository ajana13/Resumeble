version: "3.8"
services:
  client:
    build: 
      context: client
      dockerfile: Dockerfile
    restart: unless-stopped
    # ports:
    #   - "3000:3000"
    volumes:
      - ./client:/app
    environment:
      - IS_DOCKER=Yes
  auth:
    build:
      context: auth
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./:/usr/src/app
    # ports:
    #   - "5000:5000"
    environment:
      - IS_DOCKER=Yes
  resumeapi:
    build:
      context: resumeapi
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - IS_DOCKER=Yes
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    depends_on:
      - client
      - auth
      - resumeapi

# version: "3.8"
# services:
#     nginx:
#         image: timothynguyen/nginx:latest
#         restart: always
#         build:
#             context: nginx
#             dockerfile: Dockerfile
#         depends_on:
#             - client
#             - auth
#         ports:
#             - "80:80"

#     client:
#         image: timothynguyen/client:latest
#         build:
#             context: client
#             dockerfile: Dockerfile
#         environment:
#             - CHOKIDAR_USEPOLLING=true

#     auth:
#         image: timothynguyen/auth:latest
#         build:
#             context: auth
#             dockerfile: Dockerfile
#         env_file:
#             - ./auth/.env